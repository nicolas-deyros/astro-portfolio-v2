---
import Layout from '@layouts/index.astro'
import { db, Links as LinksTable } from 'astro:db'

interface LinkData {
	id: number
	title: string
	url: string
	tags: string
	date: string
}

// Server-side data fetching - direct database access
let links: LinkData[] = []
try {
	const dbLinks = await db.select().from(LinksTable)
	links = dbLinks.map(link => ({
		id: link.id,
		title: link.title,
		url: link.url,
		tags: link.tags,
		date: link.date,
	}))
	console.log(`Loaded ${links.length} links from database`)
} catch (error) {
	console.error('Error fetching links from database:', error)
	// Fallback to empty array if database is not available
	links = []
}
---

<Layout title="Admin | Link Management">
	<!-- Auth Check Script - Runs immediately to prevent content flash -->
	<script is:inline>
		// Hide page initially
		document.documentElement.style.visibility = 'hidden'

		// Check authentication immediately
		if (
			typeof localStorage !== 'undefined' &&
			localStorage.getItem('admin_authenticated') === 'true'
		) {
			// Authenticated - show page
			document.documentElement.style.visibility = 'visible'
		} else {
			// Not authenticated - redirect immediately
			window.location.href = '/admin'
		}
	</script>

	<div class="min-h-screen bg-white dark:bg-gray-900">
		<!-- Main Content -->
		<div class="mx-auto max-w-7xl px-4 py-8 sm:px-6 lg:px-8">
			<!-- Header -->
			<div class="mb-8">
				<h2 class="text-3xl font-bold text-gray-900 dark:text-white">
					Link Management
				</h2>
				<p class="mt-2 text-sm text-gray-600 dark:text-gray-400">
					Manage your social links and external resources.
				</p>
			</div>

			<!-- Add New Link Form -->
			<div
				class="mb-12 rounded-lg border border-slate-200 bg-white p-6 shadow-sm dark:border-slate-700 dark:bg-slate-800">
				<h3
					class="mb-6 text-xl font-semibold text-slate-900 dark:text-slate-100">
					Add New Link
				</h3>
				<form id="add-link-form" class="space-y-6">
					<div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
						<div class="sm:col-span-2">
							<label
								for="title"
								class="block text-sm font-medium text-slate-700 dark:text-slate-300">
								Title
							</label>
							<input
								type="text"
								id="title"
								name="title"
								required
								class="mt-1 block w-full rounded-md border border-slate-300 bg-white px-3 py-2 text-sm placeholder-slate-400 shadow-sm transition-colors focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none dark:border-slate-600 dark:bg-slate-700 dark:text-slate-100 dark:placeholder-slate-500 dark:focus:border-blue-400 dark:focus:ring-blue-400"
								placeholder="Enter link title"
							/>
						</div>
						<div class="sm:col-span-2">
							<label
								for="url"
								class="block text-sm font-medium text-slate-700 dark:text-slate-300">
								URL
							</label>
							<input
								type="url"
								id="url"
								name="url"
								required
								class="mt-1 block w-full rounded-md border border-slate-300 bg-white px-3 py-2 text-sm placeholder-slate-400 shadow-sm transition-colors focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none dark:border-slate-600 dark:bg-slate-700 dark:text-slate-100 dark:placeholder-slate-500 dark:focus:border-blue-400 dark:focus:ring-blue-400"
								placeholder="https://example.com"
							/>
						</div>
						<div>
							<label
								for="tags"
								class="block text-sm font-medium text-slate-700 dark:text-slate-300">
								Tags
							</label>
							<input
								type="text"
								id="tags"
								name="tags"
								required
								class="mt-1 block w-full rounded-md border border-slate-300 bg-white px-3 py-2 text-sm placeholder-slate-400 shadow-sm transition-colors focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none dark:border-slate-600 dark:bg-slate-700 dark:text-slate-100 dark:placeholder-slate-500 dark:focus:border-blue-400 dark:focus:ring-blue-400"
								placeholder="tech, ai, development"
							/>
							<p class="mt-1 text-xs text-slate-500 dark:text-slate-400">
								Separate multiple tags with commas
							</p>
						</div>
						<div>
							<label
								for="date"
								class="block text-sm font-medium text-slate-700 dark:text-slate-300">
								Publication Date
							</label>
							<input
								type="date"
								id="date"
								name="date"
								required
								class="mt-1 block w-full rounded-md border border-slate-300 bg-white px-3 py-2 text-sm placeholder-slate-400 shadow-sm transition-colors focus:border-blue-500 focus:ring-1 focus:ring-blue-500 focus:outline-none dark:border-slate-600 dark:bg-slate-700 dark:text-slate-100 dark:placeholder-slate-500 dark:focus:border-blue-400 dark:focus:ring-blue-400"
							/>
							<p class="mt-1 text-xs text-slate-500 dark:text-slate-400">
								Future dates will be marked as "Scheduled"
							</p>
						</div>
					</div>
					<div class="flex justify-end">
						<button
							type="submit"
							class="inline-flex items-center rounded-md bg-blue-600 px-4 py-2 text-sm font-medium text-white shadow-sm transition-colors hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:outline-none dark:focus:ring-offset-slate-800">
							<svg
								class="mr-2 h-4 w-4"
								fill="none"
								stroke="currentColor"
								viewBox="0 0 24 24">
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M12 6v6m0 0v6m0-6h6m-6 0H6">
								</path>
							</svg>
							Add Link
						</button>
					</div>
				</form>
			</div>

			<!-- Links Table -->
			<div
				class="rounded-lg border border-slate-200 bg-white shadow-sm dark:border-slate-700 dark:bg-slate-800">
				<div class="border-b border-slate-200 px-6 py-4 dark:border-slate-700">
					<div
						class="flex flex-col sm:flex-row sm:items-center sm:justify-between">
						<div>
							<h3
								class="text-xl font-semibold text-slate-900 dark:text-slate-100">
								Links Management
							</h3>
							<p class="mt-1 text-sm text-slate-600 dark:text-slate-400">
								Click column headers to sort. Future dates are marked as
								"Scheduled".
							</p>
						</div>
					</div>
				</div>

				<!-- Responsive Table -->
				<div class="overflow-x-auto">
					<table
						class="min-w-full divide-y divide-slate-200 dark:divide-slate-700">
						<thead class="bg-slate-50 dark:bg-slate-700">
							<tr>
								<th
									class="hidden w-8 px-4 py-3 text-left text-xs font-medium tracking-wider text-slate-500 uppercase md:table-cell dark:text-slate-300">
									<span class="sr-only">Select</span>
								</th>
								<th
									class="sortable w-1/4 cursor-pointer px-4 py-3 text-left text-xs font-medium tracking-wider text-slate-500 uppercase hover:bg-slate-100 dark:text-slate-300 dark:hover:bg-slate-600"
									data-sort="title">
									Title
									<span class="sort-indicator ml-1">↕️</span>
								</th>
								<th
									class="hidden w-1/3 px-4 py-3 text-left text-xs font-medium tracking-wider text-slate-500 uppercase md:table-cell dark:text-slate-300">
									URL
								</th>
								<th
									class="sortable hidden w-1/6 cursor-pointer px-4 py-3 text-left text-xs font-medium tracking-wider text-slate-500 uppercase hover:bg-slate-100 md:table-cell dark:text-slate-300 dark:hover:bg-slate-600"
									data-sort="tags">
									Tags
									<span class="sort-indicator ml-1">↕️</span>
								</th>
								<th
									class="sortable w-24 cursor-pointer px-4 py-3 text-left text-xs font-medium tracking-wider text-slate-500 uppercase hover:bg-slate-100 dark:text-slate-300 dark:hover:bg-slate-600"
									data-sort="date">
									Date
									<span class="sort-indicator ml-1">↓</span>
								</th>
								<th
									class="hidden w-20 px-4 py-3 text-left text-xs font-medium tracking-wider text-slate-500 uppercase md:table-cell dark:text-slate-300">
									Status
								</th>
								<th class="relative hidden w-24 px-4 py-3 md:table-cell">
									<span class="sr-only">Actions</span>
								</th>
							</tr>
						</thead>
						<tbody
							id="links-table-body"
							class="divide-y divide-slate-200 bg-white dark:divide-slate-700 dark:bg-slate-800">
							{
								links.map((link: LinkData) => {
									const linkDate = new Date(link.date)
									const today = new Date()
									const isScheduled = linkDate > today

									return (
										<tr
											data-id={link.id}
											data-date={link.date}
											data-title={link.title}
											data-tags={link.tags}
											class="flex flex-col hover:bg-slate-50 md:table-row dark:hover:bg-slate-700/50">
											<td class="hidden px-4 py-4 text-sm font-medium text-slate-900 md:table-cell dark:text-slate-100">
												<input
													type="checkbox"
													class="link-checkbox h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800"
													data-id={link.id}
												/>
											</td>
											<td class="block px-4 py-4 text-sm font-medium text-slate-900 md:table-cell dark:text-slate-100">
												<div class="mb-2 flex items-center justify-between md:hidden">
													<input
														type="checkbox"
														class="link-checkbox h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800"
														data-id={link.id}
													/>
													{isScheduled ? (
														<span class="inline-flex rounded-full bg-yellow-100 px-2 py-1 text-xs leading-4 font-medium text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
															Scheduled
														</span>
													) : (
														<span class="inline-flex rounded-full bg-green-100 px-2 py-1 text-xs leading-4 font-medium text-green-800 dark:bg-green-900 dark:text-green-200">
															Live
														</span>
													)}
												</div>
												<div
													class="leading-tight font-medium break-words"
													title={link.title}>
													{link.title}
												</div>
												<div class="mt-2 space-y-1 text-xs text-slate-500 md:hidden dark:text-slate-400">
													<div>
														<span class="font-medium">URL: </span>
														<a
															href={link.url}
															target="_blank"
															rel="noopener noreferrer"
															class="break-all text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300">
															{link.url}
														</a>
													</div>
													<div>
														<span class="font-medium">Tags: </span>
														{link.tags}
													</div>
												</div>
											</td>
											<td class="hidden px-4 py-4 text-sm text-slate-500 md:table-cell dark:text-slate-400">
												<a
													href={link.url}
													target="_blank"
													rel="noopener noreferrer"
													class="break-all text-blue-600 hover:text-blue-900 dark:text-blue-400 dark:hover:text-blue-300">
													<div class="leading-tight" title={link.url}>
														{link.url}
													</div>
												</a>
											</td>
											<td class="hidden px-4 py-4 text-sm text-slate-500 md:table-cell dark:text-slate-400">
												<div
													class="leading-tight break-words"
													title={link.tags}>
													{link.tags}
												</div>
											</td>
											<td class="block px-4 py-4 text-right text-sm whitespace-nowrap text-slate-500 md:table-cell md:text-left dark:text-slate-400">
												<span class="font-medium md:hidden">Date: </span>
												{link.date}
											</td>
											<td class="hidden px-4 py-4 text-sm md:table-cell">
												{isScheduled ? (
													<span class="inline-flex rounded-full bg-yellow-100 px-2 py-1 text-xs leading-4 font-medium text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200">
														Scheduled
													</span>
												) : (
													<span class="inline-flex rounded-full bg-green-100 px-2 py-1 text-xs leading-4 font-medium text-green-800 dark:bg-green-900 dark:text-green-200">
														Live
													</span>
												)}
											</td>
											<td class="block px-4 py-4 text-right text-sm font-medium whitespace-nowrap md:table-cell">
												<div class="flex flex-row justify-end gap-2 md:flex-col">
													<button
														class="edit-btn rounded bg-blue-50 px-2 py-1 text-blue-600 hover:text-blue-900 dark:bg-blue-900/20 dark:text-blue-400 dark:hover:text-blue-300"
														data-id={link.id}>
														Edit
													</button>
													<button
														class="delete-btn rounded bg-red-50 px-2 py-1 text-red-600 hover:text-red-900 dark:bg-red-900/20 dark:text-red-400 dark:hover:text-red-300"
														data-id={link.id}>
														Delete
													</button>
												</div>
											</td>
										</tr>
									)
								})
							}
						</tbody>
					</table>
				</div>
			</div>

			<!-- Action Bar -->
			<div
				id="action-bar"
				class="fixed bottom-4 left-1/2 z-50 hidden -translate-x-1/2 transform rounded-lg border border-slate-200 bg-white px-4 py-3 shadow-lg dark:border-slate-700 dark:bg-slate-800">
				<div class="flex items-center gap-4">
					<span
						id="selected-count"
						class="text-sm text-slate-600 dark:text-slate-400">
						0 selected
					</span>
					<div class="flex gap-2">
						<button
							id="bulk-edit-btn"
							class="rounded bg-blue-600 px-3 py-1 text-sm text-white hover:bg-blue-700">
							Edit
						</button>
						<button
							id="bulk-delete-btn"
							class="rounded bg-red-600 px-3 py-1 text-sm text-white hover:bg-red-700">
							Delete
						</button>
					</div>
				</div>
			</div>
		</div>
	</div>

	<script>
		// Auth check and redirect
		document.addEventListener('astro:page-load', () => {
			if (localStorage.getItem('admin_authenticated') !== 'true') {
				window.location.href = '/admin'
				return
			}

			// Add link form
			document
				.getElementById('add-link-form')
				?.addEventListener('submit', async e => {
					e.preventDefault()
					const formData = new FormData(e.target as HTMLFormElement)
					const data = Object.fromEntries(formData.entries())

					try {
						const response = await fetch('/api/links.json', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
								Authorization: `Bearer ${localStorage.getItem('auth_token')}`,
							},
							body: JSON.stringify(data),
						})

						if (response.ok) {
							location.reload()
						} else {
							alert('Error adding link')
						}
					} catch {
						alert('Error adding link')
					}
				})

			// Link actions
			document
				.getElementById('links-table-body')
				?.addEventListener('click', async e => {
					const target = e.target as HTMLElement
					const id = target.getAttribute('data-id')

					if (target.classList.contains('delete-btn') && id) {
						if (confirm('Delete this link?')) {
							try {
								const response = await fetch('/api/links.json', {
									method: 'DELETE',
									headers: {
										'Content-Type': 'application/json',
										Authorization: `Bearer ${localStorage.getItem('auth_token')}`,
									},
									body: JSON.stringify({ id: parseInt(id) }),
								})
								if (response.ok) location.reload()
							} catch {
								alert('Error deleting link')
							}
						}
					}
				})

			// Checkbox functionality
			document.addEventListener('change', e => {
				const target = e.target as HTMLElement
				if (target.classList.contains('link-checkbox')) {
					updateActionBar()
				}
			})

			function updateActionBar(): void {
				const checkboxes = document.querySelectorAll(
					'.link-checkbox:checked',
				) as NodeListOf<HTMLInputElement>
				const actionBar = document.getElementById('action-bar')
				const selectedCount = document.getElementById('selected-count')

				if (selectedCount) {
					selectedCount.textContent = `${checkboxes.length} selected`
				}

				if (actionBar) {
					if (checkboxes.length > 0) {
						actionBar.classList.remove('hidden')
					} else {
						actionBar.classList.add('hidden')
					}
				}
			}
		})
	</script>
</Layout>
